# 📚 개발 도서 스터디 템플릿

## 🧠 1. 책을 읽기 전에
- 알고 싶은 개념 : 혹은 인덱스를 너무 많이 쓰면 어떻게 되는지가 궁금함

---

## 📂 2. 내용 정리 (자신의 언어로 요약)

### 인덱스 설계
- Like 문을 중간검색어로 사용하면 풀스캔을 유발할 수도 있다.
  - 이에 대한 대안으로 엘라스틱 서치, FULLTEXT 인덱스를 활용할 수도 있음
- 커버링 인덱스 : 특정 쿼리를 실행하는데 필요한 컬럼을 모두 포함하는 인덱스
  - Where절에서 검색하는 내용에 대한 복한 인덱스, 그리고 그 조건에 해당하는 값만 선택
- 단순히 인덱스가 없는 조건을 추가하기보다, 기존 인덱스를 활용할 수 있는 방법을 찾아서 타개하기

### 조회 성능 개선
- 서브쿼리 : 각 서브쿼리에 대한 비효율성이 크게 늘어날 수 있음
- 집계 데이터 미리 계산하기 : 미리 계산된 결과를 컬럼에 추가하면 된다. (쿼리를 2번 날리기)
  - answerCnt, likeCnt 는 update쿼리로 날림
  - insert쿼리르 날려서 실제 데이터는 별도로 삽입하고
  - 정규화와 무결성이 깨질 수는 있음. 하지만 그정도로 정보가 중요한 것인지를 확인할 필요성이 있는지를 따져야 한다.
  - 동시성 이슈 : 트랜잭션 격리 수준을 생각해서 처리하고 검증해야 한다.

### 페이징
- offset만큼 데이터를 조회하려고 해도 offset위치까지 데이터를 탐색하는 과정에서 지연은 발생한다.
- 특정 ID값을 기준으로 조회하기 (커서페이징 방식을 알아보기)
```sql
SELECT * FROM article
WHERE id < 9985 and deleted = false
ORDER BY ID DESC
LIMIT 10
```
- 다음 데이터가 더 있는지를 확인해서 알려주는 방법
```sql
SELECT * FROM article
WHERE id < 1001 and deleted = false
ORDER BY ID DESC
LIMIT 11
```
- 조회 결과가 11개면 다음 데이터가 존재함을 쿼리를 통해 알게됨. 그러면 결과는 10개만 보내주고, true로 다음 데이터가 있음을 알려주면 됨

### 조회 범위를 조절하기
- 최신 데이터만 조회 : 특정 월을 기준으로 그보다 최신인 것들만 조회하도록 where절의 조건을 1개만 사용
- 메모리 캐시를 사용하도록 유도한다. 캐시 효율이 높도록 사용하면 응답 속도가 좋아질 것
- 전체 Count하지 않기 : Count를 아무리 해야 하는 상황이라도, 성능에 문제가 있을 수 있으므로 이는 최대한 조절해야 함
- 트래픽에 다라 이상징후가 있을 수도 있음
- 단편화와 최적화 : DELETE는 데이터 삭제를 하더라도 디스크 용량이 줄어들지 않음. 이를 나중에 재사용 하게 된다. 
  - 이는 빈 공간이 발생하는 문제를 야기할 수 있음. 최적화 작업을 통해서 데이터를 재배치해야 함
- 캐시 서버 구성하기

### 주의 사항들
- 쿼리 타임아웃 시간이 길어진다면.. 일부러 에러 응답을 떨어뜨리는 것도 방법임
- Repl이 되어있다면, 주 DB에서 SELECT 쿼리를 실행하기
- 배치와 같이 일괄 처리 작업은 쿼리 실행 시간을 추적해 원인을 찾아야 한다.
  - 개선 방법은 커버링 인덱스를 활용하거나 데이터를 일정 크기로 나눠 처리한다.
  - 1달 데이터라면 일 데이터 30개의 쿼리를 실행해 1달 데이터를 만들기
- 타입이 다른 컬럼 조인
  - 타입을 맞춰준다. cast(userid as char character set utf8mbr4) collate 'utf8mb4_unicode_ci' = p.receiverid
- 테이블 변경
  - MYSQL의 경우 테이블을 변경할 때 새 테이블을 생성하고 원본 테이블을 복사한 다음에 복사가 되면 테이블을 대체한다.
  - 이때 쓰기작업을 허용하지 않아 이 시간만큼 서비스는 주앋ㄴ된다.
- DB 최대 연결 개수 -> 트래픽이 증가하는 만큼 수평 확장에서 DB연결을 증가시킬 수 있음
  - 단, 서비스의 사용율이 70%가 넘으면 연결개수를 늘리면 안된다.
- 트랜잭션의 단위를 생각하기
  - 중요한 처리와 중요하지 않은 처리를 구분해서 정보 처리의 범위와 단계를 확인하면서 개발해야한다.

---

## 💬 3. 이야기하고 싶은 질문 / 포인트

- ❓ 질문 1: 쿼리 튜닝 경험이 궁금합니다
- ❓ 질문 2: 회사 통계 데이터 이야기 (수많은 조건 수많은 복합 인덱스, 통계를 어떻게 낼 건지)
- ❓ 질문 3: 서브쿼리를 사용을 좋아하는지? 아니면 아닌지?

- 💭 더 알아보고 싶은 개념 : 쿼리튜닝에 대한 더 많은 아이디어. 정규화와 비정규화를 현업에서는 어떻게 판단하는지? 

---

## 🎯 4. 정리 & 적용 아이디어

- **내가 배운 것 한 줄 요약**:  
  → 쿼리 개선 방법, 쿼리가 느린지 판단하는 방법, 조회를 슬기롭게 해결하는 방법을 배웠음
- **개발에 어떻게 적용해볼까?**
    - 통계 데이터 뜯어고치기, 불필요한 테이블 줄이기

---

## 🌟 5. 전체 리뷰
- **별점 평가** (⭐️ 5점 만점): `⭐️⭐️⭐️⭐️⭐️`
